import streamlit as st
import numpy as np
import pandas as pd

st.sidebar.title("DataJob :chart_with_downwards_trend:")
st.sidebar.subheader("Menu") 
pages =["Exploration","Preprocessing","Visualisation","Modelisation", "Conclusion","Test"]
page = st.sidebar.radio("",options = pages)
st.sidebar.info(
    "Projet Datajob - Promotion Bootcamp mars 2023"
    "\n\n"
    "Participants:"
    "\n\n"
    "David DUBOIS ()"
    "\n\n"
    "Pauline WOLFF\n(https://www.linkedin.com/in/pauline-wolff-27b003100/) "
    "\n\n"
    "Sophie LAUSSEL\n() "
    )


if page == pages[0]:  
    st.title(':orange[Exploration] :mag_right:')
    st.header("Description")
    st.markdown('''<div style="text-align: justify;">
                L‚Äôobjectif de ce projet est de comprendre √† l‚Äôaide des donn√©es les diff√©rents profils techniques qui se sont cr√©√©s dans l‚Äôindustrie de la Data. 
                Plus exactement, nous m√®nerons une analyse pouss√©e des t√¢ches effectu√©es ainsi que des outils utilis√©s pour chaque poste afin d‚Äô√©tablir des 
                ensembles de comp√©tences et outils correspondant √† chaque poste du monde de la Data.
                Ce projet s‚Äôint√®gre parfaitement dans notre projet professionnel. Il nous permet d‚Äôanalyser, √† l‚Äôaide de ce jeu de donn√©es, 
                les diff√©rents m√©tiers de la data √† travers les logiciels utilis√©s, les √©tudes des diff√©rents profils etc. 
                </div>''', unsafe_allow_html=True)
    '\n'

    st.header("Objectifs")
    st.markdown(
                """
                Les principaux objectifs qui ressortent √† travers ce sondages sont :
                - analyser les profils des utilisateurs de Kaggle au regard de leur m√©tier
                - √©laborer un mod√®le permettant d‚Äôidentifier le m√©tier data le plus adapt√©, en fonction des comp√©tences des personnes souhaitant int√©grer le domaine de la data.
                """
                )    
    '\n'

    st.header("Cadre")
    st.markdown('''<div style="text-align: justify;">
                Le jeu de donn√©es sur lequel nous allons travailler provient d‚Äôun sondage cr√©√© et lanc√© en 2020 sur 171 pays. Il √©tait destin√© aux personnes inscrites sur le site Kaggle (plateforme web interactive qui propose des comp√©titions d'apprentissage automatique en science des donn√©es). Au total, 20 000 personnes ont √©t√© sond√©es. L‚Äô√©tude est essentiellement centr√©e sur le Machine Learning.
                Nous proc√©dons √† une premi√®re analyse visuelle sur le jeu de donn√©es (√† l‚Äôaide de la m√©thode info de pandas). 
                </div>''', unsafe_allow_html=True)
     
    st.markdown('''<div style="text-align: justify;">
                Ainsi le jeu de donn√©es se d√©compose de la mani√®re suivante :
                </div>''', unsafe_allow_html=True)
    st.markdown("- 355 colonnes,")
    st.markdown("- l‚Äôint√©gralit√© des donn√©es sont de type objet donc qualitatives, il y a 20 037 entr√©es.")
    st.markdown(''' <style> [data-testid="stMarkdownContainer"] ul{list-style-position: inside;}</style>    ''', unsafe_allow_html=True)

    st.markdown('''<div style="text-align: justify;">
                D‚Äôun point de vue technique, toutes les donn√©es √©tant de type qualitatif, nous aurons un important travail d‚Äôencodage √† faire pour pouvoir traiter la donn√©e. 
                </div>''', unsafe_allow_html=True) 
    '\n'
    
    st.header("Variable cible :dart:")
    st.markdown('''<div style="text-align: justify;">
                La variable cible de notre projet correspond aux m√©tiers de la data dans le jeu de donn√©es, cette variable se nomme ‚Äútitre‚Äô, que nous appellerons M√©tier, terme plus explicite. Nous √©tudierons les 4 m√©tiers : 
                Data Scientest
                Data Analyst
                Machine Learning Engineer
                Data Engineer 
                </div>''', unsafe_allow_html=True) 
    '\n'
    
    st.header("Remarques sur le dataset")
    col1, col2 = st.columns(2)
    with col1:
        st.subheader(':red[Difficult√©s]')
        st.write(
            '''
            - les questions √† choix multiples g√©n√®rent une colonne distincte dans le dataset : **355** colonnes pour **39** questions
            - une grande quantit√© d‚Äôintervalles et de bornes : cat√©gorie ‚Äúobjet‚Äù par d√©faut
            - certaines questions r√©serv√©es aux √©tudiants et aux employ√©s
            - des questions ne sont d√©bloqu√©es qu'en fonction de la r√©ponse √† une question en amont -> beaucoup de ‚Äú**NaN**‚Äù g√©n√©r√©s artificiellement
            - nous identifions des ‚Äú**None**‚Äù et ‚Äú**other**‚Äù qui seront √† analyser par la suite
            - doublons √† analyser et corriger
            '''
        )

    with col2:
        st.subheader(':green[Points positifs]')
        st.write(
            '''
            - aucune zone de texte libre 
            - ensemble des r√©ponses normalis√©
            - pas de diff√©rences entre majuscules ou minuscules par exemple
            - pas de nettoyage √† faire sur la police ou la casse
            ''')


if page == pages[1]: 
    st.title(':orange[Preprocessing]')    
    st.image('Preprocessing.png')

if page == pages[2]: 
    st.title(':orange[Visualisation]')
    #st.header("Titre")
    #st.write("write")
    #st.markdown("Markdown")
    tab1, tab2 = st.tabs(["üìà Chart 1", ":round_pushpin: Chart 2"])
    tab1.subheader("R√©partition des m√©tiers de la Data")
    tab1.image("Piechart.png")
    tab1.info("Nous constatons une forte concentration des Data Scientist (47%).") 
    #tab2.subheader("A tab with the data")

if page == pages[3]: 
    st.title(':orange[Mod√©lisation ]	:sparkles:')
    options = ['','SVM', 'KNN','Arbre de d√©cision', 'RandomForest', 'Regression logistique']
    st.header("S√©lection d'un mod√®le")
    selected = st.selectbox('Quel mod√®le choississez vous?',
                            options = options)
    st.write('Vous avez choisi:', selected)

    if selected == '':
        st.write("")
    elif selected == 'SVM':
        st.image('SVM.png')
        st.info(":red[Accuracy √† **0,56** apr√®s optimisation et mauvaise d√©tection de la classe 3.] \n\n Bien que nous ayons am√©lior√© l'accuracy, nous avons perdu en qualit√© sur la d√©tection de la classe 3. \n\n :point_right: **Mod√®le non s√©lectionn√©**")
        code = st.checkbox('Voir code')
        if code :
            st.code(
                '''
                from sklearn.multiclass import OneVsRestClassifier
                ovr2=OneVsRestClassifier(SVC())
                ovr2.fit(X_train,y_train)
                ''')    
    elif selected == 'KNN' :
        st.image('KNN.png')
        st.info(":red[Accuracy √† **0,45** apr√®s optimisation et mauvaise d√©tection de la classe 3.] \n\n Nous n'avons pas am√©lior√© ce mod√®le. \n\n :point_right: **Mod√®le non s√©lectionn√©**")   
        code = st.checkbox('Voir code')
        if code :
            st.code(
                '''
                knn = neighbors.KNeighborsClassifier()
                parametres = {'n_neighbors': range(2,50)}
                grid_knn = model_selection.GridSearchCV(estimator=knn, param_grid=parametres)
                grid_knn.fit(X_train, y_train)
                grid_knn.best_params_
                grid_knn.score(X_test, y_test)
                ''')
    elif selected == 'Arbre de d√©cision' :
        st.image('ADD.png')
        st.info(":red[Accuracy √† **0,44** apr√®s r√©√©quilibrage.] \n\n Le r√©√©quilibrage des classes a permis de d√©tecter la 3√®me classe, mais la d√©tection des classes 0 et 1 a baiss√©. \n\n :point_right: **Mod√®le non s√©lectionn√©**")   
    elif selected == 'RandomForest' :
        st.image('RF.png')
        st.info(":red[Accuracy √† **0,57** avant optimisation, et 0,55 apr√®s optimisation] \n\n L'am√©lioration du mod√®le n'a pas permis d'am√©liorer le score et d√©tecte tr√®s mal la classe 3, le seul avantage est qu'il √©vite un overfitting. \n\n :point_right: **Mod√®le s√©lectionn√© !**")    
    else :
        st.image('RL.png')
        st.info(":red[Accuracy √† 0,56 avant optimisation, **0,57** apr√®s optimisation et mauvaise d√©tection de la classe 3] \n\n Pas d'am√©lioration de mod√®le. \n\n :point_right: **Mod√®le non s√©lectionn√©**")    

    code = st.checkbox('Voir le comparatif')
    if code :
        st.subheader("Coefficient avant optimisation")
        df = pd.read_csv("RecapML_1.csv", sep=';')
        st.dataframe(df.style.highlight_max(axis=0))

if page == pages[4]: 
    st.title(':orange[Conclusion]')
    #st.header("Titre")
    #st.write("write")
    #st.markdown("Markdown")

    st.header("Ouvertures")

    col1, col2 = st.columns(2)

    with col1:
        st.write('Prise en compte de tous les m√©tiers de la data')

    with col2:
        st.write('Elargissement du mod√®le aux non informaticiens')

if page == pages[5]: 
    st.text('Fixed width text')
    st.markdown('_Markdown_') # see *
    st.caption('Balloons. Hundreds of them...')
    st.latex(r''' e^{i\pi} + 1 = 0 ''')
    st.write('Most objects') # df, err, func, keras!
    st.write(['st', 'is <', 3]) # see *
    st.title('My title')
    st.header('My header')
    st.subheader('My sub')
    st.code('for i in range(8): foo()')
    st.button('Hit me')
    st.checkbox('Check me out')
    st.radio('Radio', [1,2,3])
    st.selectbox('Select', [1,2,3])
    st.multiselect('Multiselect', [1,2,3])
    st.slider('Slide me', min_value=0, max_value=10)
    st.select_slider('Slide to select', options=[1,'2'])
    st.text_input('Enter some text')
    st.number_input('Enter a number')
    st.text_area('Area for textual entry')
    st.date_input('Date input')
    st.time_input('Time entry')
    st.file_uploader('File uploader')
    st.camera_input("‰∏Ä‰∫å‰∏â,ËåÑÂ≠ê!")
    st.color_picker('Pick a color')
    st.write("The following list won‚Äôt indent no matter what I try:")
    st.markdown("- Item 1")
    st.markdown("- Item 2")
    st.markdown("- Item 3")

    st.markdown('''
    <style>
    [data-testid="stMarkdownContainer"] ul{
    list-style-position: inside;
    }
    </style>
    ''', unsafe_allow_html=True)
    st.write("The following list won‚Äôt indent no matter what I try:")
    st.markdown("- Item 1")
    st.markdown("- Item 2")
    st.markdown("- Item 3")

    st.markdown('''
        <style>
        [data-testid="stMarkdownContainer"] ul{
            padding-left:40px;
        }
        </style>
        ''', unsafe_allow_html=True)